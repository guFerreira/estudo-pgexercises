
/* Exercicio 1 - Retrieve the start times of members' bookings*/ 
SELECT cd.bookings.starttime FROM cd.bookings
	INNER JOIN cd.members
		ON cd.bookings.memid = cd.members.memid
		WHERE cd.members.firstname = 'David' 
		AND cd.members.surname = 'Farrell';
		
		
/* Exercicio 2 - Work out the start times of bookings for tennis courts*/ 
SELECT cd.bookings.starttime as start, cd.facilities.name
FROM  cd.bookings
INNER JOIN cd.facilities
	ON cd.bookings.facid = cd.facilities.facid
		WHERE cd.facilities.name LIKE ('Tennis Court%') /* facilities q começam com o nome quadra de tenis*/
			AND bookings.starttime >= '2012-09-21'/* intervalo de tempo entre o dia 21 e 22*/
			AND bookings.starttime < '2012-09-22' 
			ORDER BY bookings.starttime; /* ordenado da menor data até a maior*/

/* Exercicio 3 - Produce a list of all members who have recommended another member*/ 
SELECT DISTINCT rc.firstname, rc.surname
FROM cd.members as mb
	INNER JOIN cd.members as rc
		ON rc.memid = mb.recommendedby
ORDER BY rc.surname, rc.firstname; /*ordena primeiro pelo sobrenome e depois o nome*/

/* Exercicio 4 - Produce a list of all members, along with their recommender*/ 
SELECT mb.firstname as memfname, mb.surname as memsname,
	rc.firstname as recfname, rc.surname as recsname
FROM cd.members as mb
LEFT OUTER JOIN cd.members as rc /* LEFT OUTER Deixa vazio se não haver um membro na tabela da direita*/
	ON mb.recommendedby = rc.memid
ORDER BY mb.surname, mb.firstname;

/* Exercicio 5 - Produce a list of all members who have used a tennis court*/ 
/* || ' ' || concatena as colunas em uma só, com o nome definido pelo "as member"*/
SELECT DISTINCT mb.firstname || ' ' || mb.surname as member, fc.name as facility
FROM cd.members as mb
	INNER JOIN cd.bookings as bk
		ON bk.memid = mb.memid
	INNER JOIN cd.facilities as fc
		ON bk.facid = fc.facid
		WHERE fc.name LIKE 'Tennis Court%'
ORDER BY member, facility;

/* Exercicio 6 - Produce a list of costly bookings*/ 


/* Exercicio 7 - Produce a list of all members, along with their recommender, using no joins.*/ 

/* Exercicio 8 - Produce a list of costly bookings, using a subquery*/