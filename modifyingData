/* Exercicio 1 - Insert some data into a table*/ 
INSERT INTO cd.facilities(
	facid, name, membercost, guestcost, initialoutlay, monthlymaintenance)
	VALUES (9, 'Spa', 20, 30, 100000, 800);
	
/* Exercicio 2 - Insert multiple rows of data into a table*/ 
INSERT INTO cd.facilities(
	facid, name, membercost, guestcost, initialoutlay, monthlymaintenance)
	VALUES (9, 'Spa', 20, 30, 100000, 800),
			(10, 'Squash Court 2', 3.5, 17.5, 5000, 80);

/* Exercicio 3 - Insert calculated data into a table*/ 
INSERT INTO cd.facilities(facid, name, membercost, guestcost,
						  initialoutlay, monthlymaintenance)
		/* busca o id máximo e soma +1 */
		SELECT
		/* subquerie de dentro pra buscar o maior id de facilities*/
		(SELECT max(facid) FROM cd.facilities)+1,
		'Spa', 20, 30, 100000, 800;

/* Exercicio 4 - Update some existing data*/ 
/* Muito importante ter o where, se não é substituido em todas as linhas*/
UPDATE cd.facilities
	SET initialoutlay = 10000
WHERE cd.facilities.facid = 1;
	
	
/* Exercicio 5 - Update multiple rows and columns at the same time*/ 
/* atualiza pelo id 0 e 1*/
UPDATE cd.facilities
	SET membercost = 6,
		guestcost = 30
	WHERE facid in (0,1);
	
	
/* Exercicio 6 - Update a row based on the contents of another row*/ 
UPDATE cd.facilities fc
	SET
	/* busca pela primeira quadra e retorna o custo * 1.1 que é 10% a mais */
		membercost = (SELECT membercost * 1.1 FROM cd.facilities
					 WHERE facid = 0),
		guestcost =  (SELECT guestcost * 1.1 FROM cd.facilities
					 WHERE facid = 0)
	WHERE fc.facid = 1 ;
/* Exercicio 7 - Delete all bookings*/ 
DELETE FROM cd.bookings;
/*TRUNCATE cd.bookings faz a msm coisa*/

/* Exercicio 8 - Delete a member from the cd.members table*/ 
DELETE FROM cd.members WHERE memid = 37;

/* Exercicio 9 - Delete based on a subquery*/ 
DELETE FROM cd.members
/* subquerie pra pegar uma coluna de memid, e se não existir ele remove*/
WHERE memid NOT in (SELECT memid FROM cd.bookings)
